{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\Online_Voting\\\\online-voting\\\\frontend\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./VoterDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst VoterDashboard = ({\n  voter_id\n}) => {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  const [voteSuccess, setVoteSuccess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [isVoting, setIsVoting] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  /** ✅ Check if voter has already voted */\n  const checkVoterStatus = useCallback(async () => {\n    if (!voter_id) {\n      setError(\"❌ Voter ID is required.\");\n      return;\n    }\n    try {\n      console.log(\"🔍 Checking voter status for:\", voter_id);\n      const res = await axios.post(`${API_URL}/api/check-voter`, {\n        voter_id\n      });\n      console.log(\"✅ Voter check response:\", res.data);\n      if (!res.data.success) {\n        if (isMounted.current) {\n          setHasVoted(true);\n          setVoteSuccess(res.data.message);\n        }\n      } else {\n        fetchCandidates(); // Fetch candidates only if voter hasn't voted\n      }\n    } catch (error) {\n      console.error(\"❌ Error checking voter status:\", error);\n      if (isMounted.current) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"❌ Failed to check voter status.\");\n      }\n    }\n  }, [voter_id]);\n\n  /** ✅ Fetch available candidates */\n  const fetchCandidates = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`${API_URL}/api/candidates`);\n      console.log(\"✅ Fetched Candidates:\", res.data);\n      if (isMounted.current) {\n        setCandidates(res.data || []);\n      }\n    } catch (error) {\n      console.error(\"❌ Error fetching candidates:\", error);\n      if (isMounted.current) {\n        setError(\"❌ Failed to load candidates. Please refresh.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (voter_id) {\n      checkVoterStatus();\n    }\n  }, [voter_id, checkVoterStatus]);\n\n  /** ✅ Handle Vote Submission */\n  const handleVote = async candidateId => {\n    if (!voter_id) {\n      setError(\"❌ Voter ID is required to vote.\");\n      return;\n    }\n    if (isVoting || hasVoted) return;\n    setIsVoting(true);\n    try {\n      console.log(\"🗳️ Voting for:\", candidateId);\n      const res = await axios.post(`${API_URL}/api/vote`, {\n        voter_id,\n        candidateId\n      });\n      if (res.data.success) {\n        if (isMounted.current) {\n          setVoteSuccess(\"✅ Your vote has been recorded!\");\n          setHasVoted(true);\n        }\n      } else {\n        if (isMounted.current) {\n          setError(res.data.message || \"❌ Unable to cast vote.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Error casting vote:\", error);\n      if (isMounted.current) {\n        var _error$response2, _error$response2$data;\n        setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"❌ Error casting vote. Please try again.\");\n      }\n    } finally {\n      setIsVoting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title_1\",\n      children: \"\\uD83D\\uDDF3\\uFE0F Online Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), voteSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: voteSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this), hasVoted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"already-voted\",\n      children: \"\\u26A0\\uFE0F Thanks for voting! You cannot vote again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"\\u23F3 Loading candidates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"candidate-list\",\n      children: candidates.length > 0 ? candidates.map(candidate => {\n        var _candidate$votes;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"candidate-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidate-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${API_URL}/api/uploads/${candidate.logo}`,\n              alt: candidate.name,\n              className: \"candidate-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"candidate-name\",\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"vote-count\",\n              children: [\"Votes: \", (_candidate$votes = candidate.votes) !== null && _candidate$votes !== void 0 ? _candidate$votes : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vote-button\",\n              onClick: () => handleVote(candidate._id),\n              disabled: isVoting,\n              children: isVoting ? \"Voting...\" : \"🗳️ Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, candidate._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-candidates\",\n        children: \"\\u26A0\\uFE0F No candidates available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"smu/UvkPjHrZRYX0WCJWzB+cql0=\");\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","VoterDashboard","voter_id","_s","candidates","setCandidates","voteSuccess","setVoteSuccess","error","setError","hasVoted","setHasVoted","isVoting","setIsVoting","loading","setLoading","isMounted","current","checkVoterStatus","console","log","res","post","data","success","message","fetchCandidates","_error$response","_error$response$data","response","get","handleVote","candidateId","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","candidate","_candidate$votes","src","logo","alt","name","votes","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/Online_Voting/online-voting/frontend/src/components/VoterDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./VoterDashboard.css\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst VoterDashboard = ({ voter_id }) => {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [voteSuccess, setVoteSuccess] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  const [isVoting, setIsVoting] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  /** ✅ Check if voter has already voted */\r\n  const checkVoterStatus = useCallback(async () => {\r\n    if (!voter_id) {\r\n      setError(\"❌ Voter ID is required.\");\r\n      return;\r\n    }\r\n    try {\r\n      console.log(\"🔍 Checking voter status for:\", voter_id);\r\n      const res = await axios.post(`${API_URL}/api/check-voter`, { voter_id });\r\n\r\n      console.log(\"✅ Voter check response:\", res.data);\r\n      if (!res.data.success) {\r\n        if (isMounted.current) {\r\n          setHasVoted(true);\r\n          setVoteSuccess(res.data.message);\r\n        }\r\n      } else {\r\n        fetchCandidates(); // Fetch candidates only if voter hasn't voted\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error checking voter status:\", error);\r\n      if (isMounted.current) {\r\n        setError(error.response?.data?.message || \"❌ Failed to check voter status.\");\r\n      }\r\n    }\r\n  }, [voter_id]);\r\n\r\n  /** ✅ Fetch available candidates */\r\n  const fetchCandidates = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/candidates`);\r\n      console.log(\"✅ Fetched Candidates:\", res.data);\r\n      if (isMounted.current) {\r\n        setCandidates(res.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching candidates:\", error);\r\n      if (isMounted.current) {\r\n        setError(\"❌ Failed to load candidates. Please refresh.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (voter_id) {\r\n      checkVoterStatus();\r\n    }\r\n  }, [voter_id, checkVoterStatus]);\r\n\r\n  /** ✅ Handle Vote Submission */\r\n  const handleVote = async (candidateId) => {\r\n    if (!voter_id) {\r\n      setError(\"❌ Voter ID is required to vote.\");\r\n      return;\r\n    }\r\n    if (isVoting || hasVoted) return;\r\n    setIsVoting(true);\r\n    try {\r\n      console.log(\"🗳️ Voting for:\", candidateId);\r\n      const res = await axios.post(`${API_URL}/api/vote`, { voter_id, candidateId });\r\n\r\n      if (res.data.success) {\r\n        if (isMounted.current) {\r\n          setVoteSuccess(\"✅ Your vote has been recorded!\");\r\n          setHasVoted(true);\r\n        }\r\n      } else {\r\n        if (isMounted.current) {\r\n          setError(res.data.message || \"❌ Unable to cast vote.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error casting vote:\", error);\r\n      if (isMounted.current) {\r\n        setError(error.response?.data?.message || \"❌ Error casting vote. Please try again.\");\r\n      }\r\n    } finally {\r\n      setIsVoting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"voter-container\">\r\n      <h1 className=\"title_1\">🗳️ Online Voting System</h1>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {voteSuccess && <p className=\"success-message\">{voteSuccess}</p>}\r\n\r\n      {hasVoted ? (\r\n        <p className=\"already-voted\">⚠️ Thanks for voting! You cannot vote again.</p>\r\n      ) : loading ? (\r\n        <p className=\"loading-message\">⏳ Loading candidates...</p>\r\n      ) : (\r\n        <div className=\"candidate-list\">\r\n          {candidates.length > 0 ? (\r\n            candidates.map((candidate) => (\r\n              <div key={candidate._id} className=\"candidate-row\">\r\n                <div className=\"candidate-info\">\r\n                  <img\r\n                    src={`${API_URL}/api/uploads/${candidate.logo}`}\r\n                    alt={candidate.name}\r\n                    className=\"candidate-logo\"\r\n                  />\r\n                  <p className=\"candidate-name\">{candidate.name}</p>\r\n                  <p className=\"vote-count\">Votes: {candidate.votes ?? 0}</p>\r\n                  <button\r\n                    className=\"vote-button\"\r\n                    onClick={() => handleVote(candidate._id)}\r\n                    disabled={isVoting}\r\n                  >\r\n                    {isVoting ? \"Voting...\" : \"🗳️ Vote\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"no-candidates\">⚠️ No candidates available.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM0B,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdyB,SAAS,CAACC,OAAO,GAAG,IAAI;IACxB,OAAO,MAAM;MACXD,SAAS,CAACC,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAG1B,WAAW,CAAC,YAAY;IAC/C,IAAI,CAACU,QAAQ,EAAE;MACbO,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IACA,IAAI;MACFU,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAElB,QAAQ,CAAC;MACtD,MAAMmB,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,GAAGzB,OAAO,kBAAkB,EAAE;QAAEK;MAAS,CAAC,CAAC;MAExEiB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,GAAG,CAACE,IAAI,CAAC;MAChD,IAAI,CAACF,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE;QACrB,IAAIR,SAAS,CAACC,OAAO,EAAE;UACrBN,WAAW,CAAC,IAAI,CAAC;UACjBJ,cAAc,CAACc,GAAG,CAACE,IAAI,CAACE,OAAO,CAAC;QAClC;MACF,CAAC,MAAM;QACLC,eAAe,CAAC,CAAC,CAAC,CAAC;MACrB;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,IAAIQ,SAAS,CAACC,OAAO,EAAE;QAAA,IAAAU,eAAA,EAAAC,oBAAA;QACrBnB,QAAQ,CAAC,EAAAkB,eAAA,GAAAnB,KAAK,CAACqB,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBH,OAAO,KAAI,iCAAiC,CAAC;MAC9E;IACF;EACF,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMwB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,GAAG,GAAG,MAAM3B,KAAK,CAACoC,GAAG,CAAC,GAAGjC,OAAO,iBAAiB,CAAC;MACxDsB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,GAAG,CAACE,IAAI,CAAC;MAC9C,IAAIP,SAAS,CAACC,OAAO,EAAE;QACrBZ,aAAa,CAACgB,GAAG,CAACE,IAAI,IAAI,EAAE,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,IAAIQ,SAAS,CAACC,OAAO,EAAE;QACrBR,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF,CAAC,SAAS;MACRM,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZgB,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAAChB,QAAQ,EAAEgB,gBAAgB,CAAC,CAAC;;EAEhC;EACA,MAAMa,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAI,CAAC9B,QAAQ,EAAE;MACbO,QAAQ,CAAC,iCAAiC,CAAC;MAC3C;IACF;IACA,IAAIG,QAAQ,IAAIF,QAAQ,EAAE;IAC1BG,WAAW,CAAC,IAAI,CAAC;IACjB,IAAI;MACFM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEY,WAAW,CAAC;MAC3C,MAAMX,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,GAAGzB,OAAO,WAAW,EAAE;QAAEK,QAAQ;QAAE8B;MAAY,CAAC,CAAC;MAE9E,IAAIX,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE;QACpB,IAAIR,SAAS,CAACC,OAAO,EAAE;UACrBV,cAAc,CAAC,gCAAgC,CAAC;UAChDI,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,MAAM;QACL,IAAIK,SAAS,CAACC,OAAO,EAAE;UACrBR,QAAQ,CAACY,GAAG,CAACE,IAAI,CAACE,OAAO,IAAI,wBAAwB,CAAC;QACxD;MACF;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIQ,SAAS,CAACC,OAAO,EAAE;QAAA,IAAAgB,gBAAA,EAAAC,qBAAA;QACrBzB,QAAQ,CAAC,EAAAwB,gBAAA,GAAAzB,KAAK,CAACqB,QAAQ,cAAAI,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBT,OAAO,KAAI,yCAAyC,CAAC;MACtF;IACF,CAAC,SAAS;MACRZ,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKuC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BxC,OAAA;MAAIuC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpDhC,KAAK,iBAAIZ,OAAA;MAAGuC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDlC,WAAW,iBAAIV,OAAA;MAAGuC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAE9B;IAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/D9B,QAAQ,gBACPd,OAAA;MAAGuC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC3E1B,OAAO,gBACTlB,OAAA;MAAGuC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1D5C,OAAA;MAAKuC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BhC,UAAU,CAACqC,MAAM,GAAG,CAAC,GACpBrC,UAAU,CAACsC,GAAG,CAAEC,SAAS;QAAA,IAAAC,gBAAA;QAAA,oBACvBhD,OAAA;UAAyBuC,SAAS,EAAC,eAAe;UAAAC,QAAA,eAChDxC,OAAA;YAAKuC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BxC,OAAA;cACEiD,GAAG,EAAE,GAAGhD,OAAO,gBAAgB8C,SAAS,CAACG,IAAI,EAAG;cAChDC,GAAG,EAAEJ,SAAS,CAACK,IAAK;cACpBb,SAAS,EAAC;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACF5C,OAAA;cAAGuC,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAEO,SAAS,CAACK;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD5C,OAAA;cAAGuC,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,SAAO,GAAAQ,gBAAA,GAACD,SAAS,CAACM,KAAK,cAAAL,gBAAA,cAAAA,gBAAA,GAAI,CAAC;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3D5C,OAAA;cACEuC,SAAS,EAAC,aAAa;cACvBe,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACY,SAAS,CAACQ,GAAG,CAAE;cACzCC,QAAQ,EAAExC,QAAS;cAAAwB,QAAA,EAElBxB,QAAQ,GAAG,WAAW,GAAG;YAAU;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC,GAhBEG,SAAS,CAACQ,GAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiBlB,CAAC;MAAA,CACP,CAAC,gBAEF5C,OAAA;QAAGuC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA9IIF,cAAc;AAAAoD,EAAA,GAAdpD,cAAc;AAgJpB,eAAeA,cAAc;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}