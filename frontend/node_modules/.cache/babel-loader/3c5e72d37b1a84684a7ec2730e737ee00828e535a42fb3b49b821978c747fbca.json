{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\Online Voting\\\\online_voting\\\\src\\\\components\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [voterId, setVoterId] = useState('');\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    setLoading(true); // Set loading to true\n    try {\n      const response = await fetch('http://localhost:5000/api/users');\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      setMessage('Error fetching users: ' + error.message);\n      console.error('Fetch error:', error);\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('voter_id', voterId);\n    if (image) {\n      formData.append('image', image);\n    }\n    setLoading(true); // Set loading to true\n    try {\n      const response = await fetch('http://localhost:5000/api/users/addvoter', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json(); // Get error data from response\n        throw new Error(errorData.message || 'Failed to add user');\n      }\n      setMessage('User  added successfully!');\n      fetchUsers(); // Refresh the user list\n      setVoterId(''); // Clear the input field\n      setImage(null); // Clear the image input\n    } catch (error) {\n      setMessage('Error adding user: ' + error.message);\n      console.error('Add user error:', error);\n    } finally {\n      setLoading(false); // Set loading to false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this), \" \", message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"voterId\",\n          children: \"Voter ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"voterId\",\n          value: voterId,\n          onChange: e => setVoterId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.voter_id\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(UserManagement, \"FQJ7WnFs0xQBnxksUJNcbaKpUOU=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","voterId","setVoterId","image","setImage","message","setMessage","loading","setLoading","fetchUsers","response","fetch","ok","Error","data","json","error","console","handleAddUser","e","preventDefault","formData","FormData","append","method","body","errorData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","files","disabled","map","user","voter_id","_id","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/Online Voting/online_voting/src/components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserManagement = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [voterId, setVoterId] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        setLoading(true); // Set loading to true\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch users');\r\n            }\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            setMessage('Error fetching users: ' + error.message);\r\n            console.error('Fetch error:', error);\r\n        } finally {\r\n            setLoading(false); // Set loading to false\r\n        }\r\n    };\r\n\r\n    const handleAddUser  = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('voter_id', voterId);\r\n        if (image) {\r\n            formData.append('image', image);\r\n        }\r\n\r\n        setLoading(true); // Set loading to true\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/addvoter', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            if (!response.ok) {\r\n                const errorData = await response.json(); // Get error data from response\r\n                throw new Error(errorData.message || 'Failed to add user');\r\n            }\r\n            setMessage('User  added successfully!');\r\n            fetchUsers(); // Refresh the user list\r\n            setVoterId(''); // Clear the input field\r\n            setImage(null); // Clear the image input\r\n        } catch (error) {\r\n            setMessage('Error adding user: ' + error.message);\r\n            console.error('Add user error:', error);\r\n        } finally {\r\n            setLoading(false); // Set loading to false\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>User Management</h2>\r\n            {loading && <p>Loading...</p>} {/* Show loading message */}\r\n            {message && <div className=\"alert alert-info\">{message}</div>}\r\n            <form onSubmit={handleAddUser }>\r\n                <div>\r\n                    <label htmlFor=\"voterId\">Voter ID</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"voterId\"\r\n                        value={voterId}\r\n                        onChange={(e) => setVoterId(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"image\">Image</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image\"\r\n                        onChange={(e) => setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" disabled={loading}>Add User</button> {/* Disable button while loading */}\r\n            </form>\r\n            <h3>User List</h3>\r\n            <ul>\r\n                {users.map((user) => (\r\n                    <li key={user._id}>{user.voter_id}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}