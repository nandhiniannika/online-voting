{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\Online_Voting\\\\online-voting\\\\frontend\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./VoterDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000/api\"; // ✅ API base URL\n\nconst VoterDashboard = ({\n  voter_id\n}) => {\n  _s();\n  const [candidates, setCandidates] = useState([]); // ✅ Store fetched candidates\n  const [hasVoted, setHasVoted] = useState(false); // ✅ Track if voter has voted\n  const [isVoting, setIsVoting] = useState(false); // ✅ Prevent multiple clicks\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // ✅ Fetch candidates from API\n  const fetchCandidates = async () => {\n    try {\n      const res = await axios.get(`${API_URL}/candidates`);\n      setCandidates(res.data || []); // ✅ Ensure array format\n    } catch (error) {\n      console.error(\"❌ Error fetching candidates:\", error);\n      setError(\"❌ Failed to load candidates. Please refresh.\");\n    }\n  };\n\n  // ✅ Check if the voter has already voted\n  useEffect(() => {\n    if (!voter_id) {\n      setError(\"❌ Voter ID is required.\");\n      return;\n    }\n    const checkVoterStatus = async () => {\n      try {\n        const res = await axios.post(`${API_URL}/check-voter`, {\n          voter_id\n        });\n        if (!res.data.success) {\n          setHasVoted(true); // ✅ Mark voter as already voted\n          setSuccessMessage(\"✅ You have already voted. Thank you!\");\n        }\n      } catch (error) {\n        console.error(\"❌ Error checking voter status:\", error);\n        setError(\"❌ Failed to check voter status. Please try again.\");\n      }\n    };\n    checkVoterStatus();\n    fetchCandidates();\n  }, [voter_id]); // ✅ Dependency array prevents infinite re-renders\n\n  // ✅ Handle voting logic\n  const handleVote = async (candidateId, candidateName) => {\n    if (hasVoted || isVoting) return; // ✅ Prevent multiple votes\n\n    setIsVoting(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      // ✅ Step 1: Cast vote in the backend (MongoDB)\n      await axios.post(`${API_URL}/vote`, {\n        voter_id,\n        candidateName\n      });\n\n      // ✅ Step 2: Update vote count in Google Sheets (Handled in backend)\n      await axios.post(`${API_URL}/updateGoogleSheets`, {\n        candidateName\n      });\n\n      // ✅ Step 3: Update UI to reflect vote\n      setCandidates(prevCandidates => prevCandidates.map(c => c._id === candidateId ? {\n        ...c,\n        votes: (c.votes || 0) + 1\n      } : c));\n\n      // ✅ Step 4: Mark voter as voted\n      setHasVoted(true);\n      setSuccessMessage(`✅ Your vote for ${candidateName} has been recorded successfully!`);\n    } catch (error) {\n      console.error(\"❌ Error voting:\", error);\n      setError(\"❌ Failed to cast vote. Try again.\");\n    } finally {\n      setIsVoting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title_1\",\n      children: \"\\uD83D\\uDDF3\\uFE0F Online Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"candidate-list\",\n      children: candidates.length > 0 ? candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"candidate-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"candidate-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/uploads/${candidate.logo}`,\n            alt: candidate.name,\n            className: \"candidate-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"candidate-name\",\n            children: candidate.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vote-count\",\n            children: [\"Votes: \", candidate.votes || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `vote-button ${hasVoted ? \"disabled\" : \"\"}`,\n          onClick: () => handleVote(candidate._id, candidate.name),\n          disabled: hasVoted || isVoting,\n          children: hasVoted ? \"✅ Voted\" : isVoting ? \"Voting...\" : \"🗳️ Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, candidate._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-candidates\",\n        children: \"\\u26A0\\uFE0F No candidates available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"YMtFETtnxSPhhHDEjKnu5IYUedw=\");\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","VoterDashboard","voter_id","_s","candidates","setCandidates","hasVoted","setHasVoted","isVoting","setIsVoting","error","setError","successMessage","setSuccessMessage","fetchCandidates","res","get","data","console","checkVoterStatus","post","success","handleVote","candidateId","candidateName","prevCandidates","map","c","_id","votes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","candidate","src","logo","alt","name","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/Online_Voting/online-voting/frontend/src/components/VoterDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./VoterDashboard.css\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\"; // ✅ API base URL\r\n\r\nconst VoterDashboard = ({ voter_id }) => {\r\n  const [candidates, setCandidates] = useState([]); // ✅ Store fetched candidates\r\n  const [hasVoted, setHasVoted] = useState(false); // ✅ Track if voter has voted\r\n  const [isVoting, setIsVoting] = useState(false); // ✅ Prevent multiple clicks\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  // ✅ Fetch candidates from API\r\n  const fetchCandidates = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/candidates`);\r\n      setCandidates(res.data || []); // ✅ Ensure array format\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching candidates:\", error);\r\n      setError(\"❌ Failed to load candidates. Please refresh.\");\r\n    }\r\n  };\r\n\r\n  // ✅ Check if the voter has already voted\r\n  useEffect(() => {\r\n    if (!voter_id) {\r\n      setError(\"❌ Voter ID is required.\");\r\n      return;\r\n    }\r\n\r\n    const checkVoterStatus = async () => {\r\n      try {\r\n        const res = await axios.post(`${API_URL}/check-voter`, { voter_id });\r\n        \r\n        if (!res.data.success) {\r\n          setHasVoted(true); // ✅ Mark voter as already voted\r\n          setSuccessMessage(\"✅ You have already voted. Thank you!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error checking voter status:\", error);\r\n        setError(\"❌ Failed to check voter status. Please try again.\");\r\n      }\r\n    };\r\n\r\n    checkVoterStatus();\r\n    fetchCandidates();\r\n  }, [voter_id]); // ✅ Dependency array prevents infinite re-renders\r\n\r\n  // ✅ Handle voting logic\r\n  const handleVote = async (candidateId, candidateName) => {\r\n    if (hasVoted || isVoting) return; // ✅ Prevent multiple votes\r\n\r\n    setIsVoting(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    try {\r\n      // ✅ Step 1: Cast vote in the backend (MongoDB)\r\n      await axios.post(`${API_URL}/vote`, { voter_id, candidateName });\r\n\r\n      // ✅ Step 2: Update vote count in Google Sheets (Handled in backend)\r\n      await axios.post(`${API_URL}/updateGoogleSheets`, { candidateName });\r\n\r\n      // ✅ Step 3: Update UI to reflect vote\r\n      setCandidates((prevCandidates) =>\r\n        prevCandidates.map((c) =>\r\n          c._id === candidateId ? { ...c, votes: (c.votes || 0) + 1 } : c\r\n        )\r\n      );\r\n\r\n      // ✅ Step 4: Mark voter as voted\r\n      setHasVoted(true);\r\n      setSuccessMessage(`✅ Your vote for ${candidateName} has been recorded successfully!`);\r\n    } catch (error) {\r\n      console.error(\"❌ Error voting:\", error);\r\n      setError(\"❌ Failed to cast vote. Try again.\");\r\n    } finally {\r\n      setIsVoting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"voter-container\">\r\n      <h1 className=\"title_1\">🗳️ Online Voting System</h1>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n\r\n      <div className=\"candidate-list\">\r\n        {candidates.length > 0 ? (\r\n          candidates.map((candidate) => (\r\n            <div key={candidate._id} className=\"candidate-row\">\r\n              {/* Candidate Logo & Info */}\r\n              <div className=\"candidate-info\">\r\n                <img\r\n                  src={`http://localhost:5000/uploads/${candidate.logo}`}\r\n                  alt={candidate.name}\r\n                  className=\"candidate-logo\"\r\n                />\r\n                <p className=\"candidate-name\">{candidate.name}</p>\r\n                <p className=\"vote-count\">Votes: {candidate.votes || 0}</p>\r\n              </div>\r\n\r\n              {/* Vote Button */}\r\n              <button\r\n                className={`vote-button ${hasVoted ? \"disabled\" : \"\"}`}\r\n                onClick={() => handleVote(candidate._id, candidate.name)}\r\n                disabled={hasVoted || isVoting}\r\n              >\r\n                {hasVoted ? \"✅ Voted\" : isVoting ? \"Voting...\" : \"🗳️ Vote\"}\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-candidates\">⚠️ No candidates available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}