{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\Online_Voting\\\\online-voting\\\\frontend\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst VoterDashboard = () => {\n  _s();\n  const voter_id = \"456789123025\"; // Hardcoded voter ID\n  const [candidates, setCandidates] = useState([]);\n  const [hasVoted, setHasVoted] = useState(false);\n  const [voting, setVoting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Fetch candidates and voter status\n  useEffect(() => {\n    if (!voter_id) return; // Prevent API call if voter_id is undefined\n\n    const fetchData = async () => {\n      try {\n        console.log(\"Fetching candidates and voter status...\");\n        const [candidatesRes, voterStatusRes] = await Promise.all([axios.get(`${API_URL}/candidates`), axios.post(`${API_URL}/voter/check-voter`, {\n          voter_id\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })]);\n        console.log(\"Candidates Response:\", candidatesRes.data);\n        console.log(\"Voter Status Response:\", voterStatusRes.data);\n        if (candidatesRes.data.success) {\n          setCandidates(candidatesRes.data.candidates || []);\n        } else {\n          setError(\"❌ Failed to load candidates.\");\n        }\n        if (!voterStatusRes.data.success) {\n          setHasVoted(true);\n          setSuccessMessage(\"✅ You have already voted. Thank you!\");\n        }\n      } catch (error) {\n        console.error(\"❌ Error fetching data:\", error);\n        setError(\"❌ Failed to load data. Please refresh.\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle voting\n  const handleVote = async candidateId => {\n    if (hasVoted || voting) return;\n    setVoting(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      console.log(\"Submitting vote for:\", candidateId);\n      const response = await axios.post(`${API_URL}/vote`, {\n        voter_id,\n        candidate_id: candidateId\n      });\n      console.log(\"Vote Response:\", response.data);\n      if (response.data.success) {\n        setHasVoted(true);\n        setSuccessMessage(\"🎉 Your vote has been successfully recorded!\");\n      } else {\n        setError(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"❌ Error submitting vote:\", error);\n      setError(\"❌ Failed to submit vote. Please try again.\");\n    } finally {\n      setVoting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDDF3 Voter Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), hasVoted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u2705 You have already voted. Thank you for participating!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Candidates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), candidates.length > 0 ? candidates.map((candidate, index) => {\n        var _candidate$voteCount;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"candidate-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidate-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/uploads/${candidate.logo}`,\n              alt: candidate.name,\n              className: \"candidate-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"candidate-name\",\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"vote-count\",\n              children: [\"Votes: \", (_candidate$voteCount = candidate.voteCount) !== null && _candidate$voteCount !== void 0 ? _candidate$voteCount : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vote-button\",\n              onClick: () => handleVote(candidate._id),\n              disabled: voting,\n              children: voting ? \"Voting...\" : \"🗳️ Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, candidate._id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-candidates\",\n        children: \"\\u26A0\\uFE0F No candidates available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"uluzQPSNTmW/5QeKsnBH8x+lo2Y=\");\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","VoterDashboard","_s","voter_id","candidates","setCandidates","hasVoted","setHasVoted","voting","setVoting","error","setError","successMessage","setSuccessMessage","fetchData","console","log","candidatesRes","voterStatusRes","Promise","all","get","post","headers","data","success","handleVote","candidateId","response","candidate_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","candidate","index","_candidate$voteCount","className","src","logo","alt","name","voteCount","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/Online_Voting/online-voting/frontend/src/components/VoterDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst VoterDashboard = () => {\r\n  const voter_id = \"456789123025\"; // Hardcoded voter ID\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  const [voting, setVoting] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  // Fetch candidates and voter status\r\n  useEffect(() => {\r\n    if (!voter_id) return; // Prevent API call if voter_id is undefined\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(\"Fetching candidates and voter status...\");\r\n\r\n        const [candidatesRes, voterStatusRes] = await Promise.all([\r\n          axios.get(`${API_URL}/candidates`),\r\n          axios.post(`${API_URL}/voter/check-voter`, { voter_id }, {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }),\r\n        ]);\r\n\r\n        console.log(\"Candidates Response:\", candidatesRes.data);\r\n        console.log(\"Voter Status Response:\", voterStatusRes.data);\r\n\r\n        if (candidatesRes.data.success) {\r\n          setCandidates(candidatesRes.data.candidates || []);\r\n        } else {\r\n          setError(\"❌ Failed to load candidates.\");\r\n        }\r\n\r\n        if (!voterStatusRes.data.success) {\r\n          setHasVoted(true);\r\n          setSuccessMessage(\"✅ You have already voted. Thank you!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching data:\", error);\r\n        setError(\"❌ Failed to load data. Please refresh.\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle voting\r\n  const handleVote = async (candidateId) => {\r\n    if (hasVoted || voting) return;\r\n\r\n    setVoting(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    try {\r\n      console.log(\"Submitting vote for:\", candidateId);\r\n\r\n      const response = await axios.post(`${API_URL}/vote`, {\r\n        voter_id,\r\n        candidate_id: candidateId,\r\n      });\r\n\r\n      console.log(\"Vote Response:\", response.data);\r\n\r\n      if (response.data.success) {\r\n        setHasVoted(true);\r\n        setSuccessMessage(\"🎉 Your vote has been successfully recorded!\");\r\n      } else {\r\n        setError(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error submitting vote:\", error);\r\n      setError(\"❌ Failed to submit vote. Please try again.\");\r\n    } finally {\r\n      setVoting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>🗳 Voter Dashboard</h2>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n\r\n      {hasVoted ? (\r\n        <p>✅ You have already voted. Thank you for participating!</p>\r\n      ) : (\r\n        <div>\r\n          <h3>Candidates</h3>\r\n          {candidates.length > 0 ? (\r\n            candidates.map((candidate, index) => (\r\n              <div key={candidate._id || index} className=\"candidate-row\">\r\n                <div className=\"candidate-info\">\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/${candidate.logo}`}\r\n                    alt={candidate.name}\r\n                    className=\"candidate-logo\"\r\n                  />\r\n                  <p className=\"candidate-name\">{candidate.name}</p>\r\n                  <p className=\"vote-count\">Votes: {candidate.voteCount ?? 0}</p>\r\n                  <button\r\n                    className=\"vote-button\"\r\n                    onClick={() => handleVote(candidate._id)}\r\n                    disabled={voting}\r\n                  >\r\n                    {voting ? \"Voting...\" : \"🗳️ Vote\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"no-candidates\">⚠️ No candidates available.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAG,cAAc,CAAC,CAAC;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,QAAQ,EAAE,OAAO,CAAC;;IAEvB,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;QAEtD,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACxD1B,KAAK,CAAC2B,GAAG,CAAC,GAAGxB,OAAO,aAAa,CAAC,EAClCH,KAAK,CAAC4B,IAAI,CAAC,GAAGzB,OAAO,oBAAoB,EAAE;UAAEM;QAAS,CAAC,EAAE;UACvDoB,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAChD,CAAC,CAAC,CACH,CAAC;QAEFR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,aAAa,CAACO,IAAI,CAAC;QACvDT,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,cAAc,CAACM,IAAI,CAAC;QAE1D,IAAIP,aAAa,CAACO,IAAI,CAACC,OAAO,EAAE;UAC9BpB,aAAa,CAACY,aAAa,CAACO,IAAI,CAACpB,UAAU,IAAI,EAAE,CAAC;QACpD,CAAC,MAAM;UACLO,QAAQ,CAAC,8BAA8B,CAAC;QAC1C;QAEA,IAAI,CAACO,cAAc,CAACM,IAAI,CAACC,OAAO,EAAE;UAChClB,WAAW,CAAC,IAAI,CAAC;UACjBM,iBAAiB,CAAC,sCAAsC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAIrB,QAAQ,IAAIE,MAAM,EAAE;IAExBC,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,EAAE,CAAC;IAErB,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,WAAW,CAAC;MAEhD,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAAC4B,IAAI,CAAC,GAAGzB,OAAO,OAAO,EAAE;QACnDM,QAAQ;QACR0B,YAAY,EAAEF;MAChB,CAAC,CAAC;MAEFZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,QAAQ,CAACJ,IAAI,CAAC;MAE5C,IAAII,QAAQ,CAACJ,IAAI,CAACC,OAAO,EAAE;QACzBlB,WAAW,CAAC,IAAI,CAAC;QACjBM,iBAAiB,CAAC,8CAA8C,CAAC;MACnE,CAAC,MAAM;QACLF,QAAQ,CAACiB,QAAQ,CAACJ,IAAI,CAACM,OAAO,CAAC;MACjC;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,4CAA4C,CAAC;IACxD,CAAC,SAAS;MACRF,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,oBACEb,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1BzB,KAAK,iBAAId,OAAA;MAAGwC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDvB,cAAc,iBAAIhB,OAAA;MAAGwC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAEnB;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpE7B,QAAQ,gBACPV,OAAA;MAAAmC,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE7DvC,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAAmC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClB/B,UAAU,CAACkC,MAAM,GAAG,CAAC,GACpBlC,UAAU,CAACmC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK;QAAA,IAAAC,oBAAA;QAAA,oBAC9B9C,OAAA;UAAkC+C,SAAS,EAAC,eAAe;UAAAZ,QAAA,eACzDnC,OAAA;YAAK+C,SAAS,EAAC,gBAAgB;YAAAZ,QAAA,gBAC7BnC,OAAA;cACEgD,GAAG,EAAE,iCAAiCJ,SAAS,CAACK,IAAI,EAAG;cACvDC,GAAG,EAAEN,SAAS,CAACO,IAAK;cACpBJ,SAAS,EAAC;YAAgB;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACFvC,OAAA;cAAG+C,SAAS,EAAC,gBAAgB;cAAAZ,QAAA,EAAES,SAAS,CAACO;YAAI;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClDvC,OAAA;cAAG+C,SAAS,EAAC,YAAY;cAAAZ,QAAA,GAAC,SAAO,GAAAW,oBAAA,GAACF,SAAS,CAACQ,SAAS,cAAAN,oBAAA,cAAAA,oBAAA,GAAI,CAAC;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/DvC,OAAA;cACE+C,SAAS,EAAC,aAAa;cACvBM,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACc,SAAS,CAACU,GAAG,CAAE;cACzCC,QAAQ,EAAE3C,MAAO;cAAAuB,QAAA,EAEhBvB,MAAM,GAAG,WAAW,GAAG;YAAU;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC,GAhBEK,SAAS,CAACU,GAAG,IAAIT,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiB3B,CAAC;MAAA,CACP,CAAC,gBAEFvC,OAAA;QAAG+C,SAAS,EAAC,eAAe;QAAAZ,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CArHID,cAAc;AAAAmD,EAAA,GAAdnD,cAAc;AAuHpB,eAAeA,cAAc;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}