{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\OneDrive\\\\Desktop\\\\Online_Voting\\\\online-voting\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './Login.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [id, setId] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Check if the ID is for admin or voter\n    if (id === '8143796138') {\n      // Redirect to admin dashboard\n      navigate('/admin-dashboard');\n    } else {\n      try {\n        // Send ID to the backend for validation & face recognition\n        const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n          id\n        });\n        if (response.data.success) {\n          navigate(\"/voter-dashboard\"); // Redirect to voter dashboard\n        } else {\n          setError(response.data.message);\n        }\n      } catch (error) {\n        setError(\"Authentication failed. Please try again.\");\n        console.error(\"Login error:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter ID\",\n            value: id,\n            onChange: e => setId(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"A72fvEpynKIHPMDbcDqiq2ulGcA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","id","setId","error","setError","navigate","handleLogin","e","preventDefault","response","axios","post","data","success","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/nandh/OneDrive/Desktop/Online_Voting/online-voting/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\nimport './Login.css'; // Import the CSS file for styling\r\n\r\nconst Login = () => {\r\n    const [id, setId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleLogin = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        // Check if the ID is for admin or voter\r\n        if (id === '8143796138') {\r\n            // Redirect to admin dashboard\r\n            navigate('/admin-dashboard');\r\n        } else {\r\n            try {\r\n                // Send ID to the backend for validation & face recognition\r\n                const response = await axios.post(\"http://localhost:5000/api/auth/login\", { id });\r\n\r\n                if (response.data.success) {\r\n                    navigate(\"/voter-dashboard\"); // Redirect to voter dashboard\r\n                } else {\r\n                    setError(response.data.message);\r\n                }\r\n            } catch (error) {\r\n                setError(\"Authentication failed. Please try again.\");\r\n                console.error(\"Login error:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-form\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter ID\"\r\n                            value={id}\r\n                            onChange={(e) => setId(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {error && <div className=\"error-message\">{error}</div>}\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}